#JVM Memory
input {
  exec {
    type => 'Memory'
    command => "perl JVMMemory.pl"
    interval => 10
    tags => 'Memory'
  }
}

filter {
    if [type] == "Memory" {
      grok {
        match => [ "message", "%{NUMBER:EC} %{NUMBER:Eden} %{NUMBER:OC} %{NUMBER:Old} %{NUMBER:PermC} %{NUMBER:Perm} %{NUMBER:HeapUsed} %{NUMBER:HeapCommitted}" ]
    }
  }
}

output {
  if [type] == "Memory" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.Memory.EdenCommitted", "%{EC}",
      "Alfresco.Memory.Eden", "%{Eden}",
      "Alfresco.Memory.OldCommitted", "%{OC}",
      "Alfresco.Memory.Old", "%{Old}",
      "Alfresco.Memory.PermanentCommitted", "%{PermC}",
      "Alfresco.Memory.PermanentUsed", "%{Perm}",
      "Alfresco.Memory.HeapUsed", "%{HeapUsed}",
      "Alfresco.Memory.HeapCommitted", "%{HeapCommitted}"
    ]
    }
  }
}

#Server Memory
input {
  exec {
    type => 'SystemMemory'
    command => "perl ./SystemMemory.pl"
    interval => 10
  }
}

filter {
    if [type] == "SystemMemory" {
      grok {
        match => [ "message", "%{NUMBER:TotalMemory} %{NUMBER:FreeMemory} %{NUMBER:TotalSwap} %{NUMBER:FreeSwap}" ]
    }
  }
}

output {
  if [type] == "SystemMemory" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.Memory.TotalMemory", "%{TotalMemory}",
      "Alfresco.Memory.FreeMemory", "%{FreeMemory}",
      "Alfresco.Memory.TotalSwap", "%{TotalSwap}",
      "Alfresco.Memory.FreeSwap", "%{FreeSwap}"
    ]
    }
  }
}

#Alfresco CPU
input {
  exec {
    type => 'AlfrescoCPU'
    command => "ps -ef | grep java | grep Bootstrap | grep -v grep | awk '{print $2}' | xargs -I {} top -b -n 1 -p {} | grep java | awk '{print $9}'"
    interval => 10
  }
}

filter {
    if [type] == "AlfrescoCPU" {
      grok {
        match => [ "message", "%{NUMBER:AlfrescoCPU}" ]
    }
  }
}

output {
  if [type] == "AlfrescoCPU" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.CPU.AlfrescoCPU", "%{AlfrescoCPU}"
    ]
    }
  }
}

#Server CPU
input {
  exec {
    type => 'ServerCPU'
    command => "top -b -n 3 | grep 'Cpu(s)' | tail -1 | grep -v grep | sed 's/%/ /g' | awk '{print $2, $4, $8}'"
    interval => 10
  }
}

filter {
    if [type] == "ServerCPU" {
      grok {
        match => [ "message", "%{NUMBER:UserCPU} %{NUMBER:SystemCPU} %{NUMBER:IdleCPU}" ]
    }
  }
}

output {
  if [type] == "ServerCPU" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.CPU.UserCPU", "%{UserCPU}",
      "Alfresco.CPU.SystemCPU", "%{SystemCPU}",
      "Alfresco.CPU.IdleCPU", "%{IdleCPU}"
    ]
    }
  }
}

#Disk IO
input {
  exec {
    type => 'DiskIO'
    command => "iostat -d sda | tail -2 | head -1 | awk '{print $3, $4}'"
    interval => 10
  }
}

filter {
    if [type] == "DiskIO" {
      grok {
        match => [ "message", "%{NUMBER:KBReads} %{NUMBER:KBWrites}" ]
    }
  }
}

output {
  if [type] == "DiskIO" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.Disk.KBReads", "%{KBReads}",
      "Alfresco.Disk.KBWrites", "%{KBWrites}"
    ]
    }
  }
}

#File Handles
input {
  exec {
    type => 'FileHandles'
    command => "ps -ef | grep java | grep Bootstrap | awk '{print $2}' | xargs -I {} ls /proc/{}/fd | wc -l"
    interval => 10
  }
}

filter {
    if [type] == "FileHandles" {
      grok {
        match => [ "message", "%{NUMBER:FileHandles}" ]
    }
  }
}

output {
  if [type] == "FileHandles" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.FileHandles", "%{FileHandles}"
    ]
    }
  }
}


#Solr Indexing
input {
  exec {
    type => 'SolrIndex'
    command => "curl -k -E ./alf.pem:alf -G 'https://localhost:8443/solr/admin/cores?action=SUMMARY&wt=json' \
                | sed -n 1'p' | tr '{' '\n' | tr ',' '\n' | grep -e 'Id for last TX on server' \
                -e 'Id for last TX in index' -e 'Id for last Change Set on server' \
                -e 'Id for last Change Set in index' \
                -e 'Alfresco Nodes in Index' \
                |  grep -v grep | tr  '\n' ':' | awk -F : '{print $2,$4,$6,$8,$10,$12,$14,$16,$18,$20}'"
    interval => 60
  }
}

filter {
    if [type] == "SolrIndex" {
      grok {
        match => [ "message", "%{NUMBER:AlfrescoNodesInIndex} %{NUMBER:AlfrescoLastTxOnServer} %{NUMBER:AlfrescoLastTxOnIndex} %{NUMBER:AlfrescoLastAclOnServer} %{NUMBER:AlfrescoLastAclOnIndex} %{NUMBER:ArchiveNodesInIndex} %{NUMBER:ArchiveLastTxOnServer} %{NUMBER:ArchiveLastTxOnIndex} %{NUMBER:ArchiveLastAclOnServer} %{NUMBER:ArchiveLastAclOnIndex}" ]
    }
  }
}

output {
  if [type] == "SolrIndex" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.SOLR.AlfrescoNodesInIndex", "%{AlfrescoNodesInIndex}",
      "Alfresco.SOLR.ArchiveNodesInIndex", "%{ArchiveNodesInIndex}",
      "Alfresco.SOLR.AlfrescoLastTxOnServer", "%{AlfrescoLastTxOnServer}",
      "Alfresco.SOLR.AlfrescoLastTxOnIndex", "%{AlfrescoLastTxOnIndex}",
      "Alfresco.SOLR.ArchiveLastTxOnServer", "%{ArchiveLastTxOnServer}",
      "Alfresco.SOLR.ArchiveLastTxOnIndex", "%{ArchiveLastTxOnIndex}",
      "Alfresco.SOLR.AlfrescoLastAclOnServer", "%{AlfrescoLastAclOnServer}",
      "Alfresco.SOLR.AlfrescoLastAclOnIndex", "%{AlfrescoLastAclOnIndex}",
      "Alfresco.SOLR.ArchiveLastAclOnServer", "%{ArchiveLastAclOnServer}",
      "Alfresco.SOLR.ArchiveLastAclOnIndex", "%{ArchiveLastAclOnIndex}"
    ]
    }
  }
}

#Solr Search Handlers
input {
  exec {
    type => 'SolrSearchers'
    command => "perl ./SolrSearchers.pl"
    interval => 60
    tags => 'SolrSearchers'
  }
}

filter {
    if [type] == "SolrSearchers" {
      grok {
        match => [ "message", "%{NUMBER:AlfrescoSearcher_avgTimePerRequest} %{NUMBER:AFTSSearcher_avgTimePerRequest} %{NUMBER:CMISSearcher_avgTimePerRequest}" ]
    }
  }
}

output {
  if [type] == "SolrSearchers" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.SOLR.Searchers.AlfrescoSearcher_avgTimePerRequest", "%{AlfrescoSearcher_avgTimePerRequest}",
      "Alfresco.SOLR.Searchers.AFTSSearcher_avgTimePerRequest", "%{AFTSSearcher_avgTimePerRequest}",
      "Alfresco.SOLR.Searchers.CMISSearcher_avgTimePerRequest", "%{CMISSearcher_avgTimePerRequest}"
    ]
    }
  }
}

#Solr Caches
input {
  exec {
    type => 'SolrCaches'
    command => "perl ./SolrCaches.pl"
    interval => 60
    tags => 'SolrCaches'
  }
}

filter {
    if [type] == "SolrCaches" {
      grok {
        match => [ "message", "%{NUMBER:DocumentCache_CummulativeHitRatio} %{NUMBER:DocumentCache_CummulativeEvictions} %{NUMBER:DocumentCache_CummulativeInserts} %{NUMBER:DocumentCache_CummulativeLookups} %{NUMBER:QueryResultCache_CummulativeHitRatio} %{NUMBER:QueryResultCache_CummulativeEvictions} %{NUMBER:QueryResultCache_CummulativeInserts} %{NUMBER:QueryResultCache_CummulativeLookups} %{NUMBER:AlfrescoCache_CummulativeHitRatio} %{NUMBER:AlfrescoCache_CummulativeEvictions} %{NUMBER:AlfrescoCache_CummulativeInserts} %{NUMBER:AlfrescoCache_CummulativeLookups} %{NUMBER:AlfrescoAuthorityCache_CummulativeHitRatio} %{NUMBER:AlfrescoAuthorityCache_CummulativeEvictions} %{NUMBER:AlfrescoAuthorityCache_CummulativeInserts} %{NUMBER:AlfrescoAuthorityCache_CummulativeLookups} %{NUMBER:AlfrescoPathCache_CummulativeHitRatio} %{NUMBER:AlfrescoPathCache_CummulativeEvictions} %{NUMBER:AlfrescoPathCache_CummulativeInserts} %{NUMBER:AlfrescoPathCache_CummulativeLookups} %{NUMBER:AlfrescoReaderToAclIdsCache_CummulativeHitRatio} %{NUMBER:AlfrescoReaderToAclIdsCache_CummulativeEvictions} %{NUMBER:AlfrescoReaderToAclIdsCache_CummulativeInserts} %{NUMBER:AlfrescoReaderToAclIdsCache_CummulativeLookups}" ]
    }
  }
}

output {
  if [type] == "SolrCaches" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.SOLR.Caches.DocumentCache_CummulativeHitRatio", "%{DocumentCache_CummulativeHitRatio}",
      "Alfresco.SOLR.Caches.DocumentCache_CummulativeEvictions", "%{DocumentCache_CummulativeEvictions}",
      "Alfresco.SOLR.Caches.DocumentCache_CummulativeInserts", "%{DocumentCache_CummulativeInserts}",
      "Alfresco.SOLR.Caches.DocumentCache_CummulativeLookups", "%{DocumentCache_CummulativeLookups}",
      "Alfresco.SOLR.Caches.QueryResultCache_CummulativeHitRatio", "%{QueryResultCache_CummulativeHitRatio}",
      "Alfresco.SOLR.Caches.QueryResultCache_CummulativeEvictions", "%{QueryResultCache_CummulativeEvictions}",
      "Alfresco.SOLR.Caches.QueryResultCache_CummulativeInserts", "%{QueryResultCache_CummulativeInserts}",
      "Alfresco.SOLR.Caches.QueryResultCache_CummulativeLookups", "%{QueryResultCache_CummulativeLookups}",
      "Alfresco.SOLR.Caches.AlfrescoCache_CummulativeHitRatio", "%{AlfrescoCache_CummulativeHitRatio}",
      "Alfresco.SOLR.Caches.AlfrescoCache_CummulativeEvictions", "%{AlfrescoCache_CummulativeEvictions}",
      "Alfresco.SOLR.Caches.AlfrescoCache_CummulativeInserts", "%{AlfrescoCache_CummulativeInserts}",
      "Alfresco.SOLR.Caches.AlfrescoCache_CummulativeLookups", "%{AlfrescoCache_CummulativeLookups}",
      "Alfresco.SOLR.Caches.AlfrescoAuthorityCache_CummulativeHitRatio", "%{AlfrescoAuthorityCache_CummulativeHitRatio}",
      "Alfresco.SOLR.Caches.AlfrescoAuthorityCache_CummulativeEvictions", "%{AlfrescoAuthorityCache_CummulativeEvictions}",
      "Alfresco.SOLR.Caches.AlfrescoAuthorityCache_CummulativeInserts", "%{AlfrescoAuthorityCache_CummulativeInserts}",
      "Alfresco.SOLR.Caches.AlfrescoAuthorityCache_CummulativeLookups", "%{AlfrescoAuthorityCache_CummulativeLookups}",
      "Alfresco.SOLR.Caches.AlfrescoPathCache_CummulativeHitRatio", "%{AlfrescoPathCache_CummulativeHitRatio}",
      "Alfresco.SOLR.Caches.AlfrescoPathCache_CummulativeEvictions", "%{AlfrescoPathCache_CummulativeEvictions}",
      "Alfresco.SOLR.Caches.AlfrescoPathCache_CummulativeInserts", "%{AlfrescoPathCache_CummulativeInserts}",
      "Alfresco.SOLR.Caches.AlfrescoPathCache_CummulativeLookups", "%{AlfrescoPathCache_CummulativeLookups}",
      "Alfresco.SOLR.Caches.AlfrescoReaderToAclIdsCache_CummulativeHitRatio", "%{AlfrescoReaderToAclIdsCache_CummulativeHitRatio}",
      "Alfresco.SOLR.Caches.AlfrescoReaderToAclIdsCache_CummulativeEvictions", "%{AlfrescoReaderToAclIdsCache_CummulativeEvictions}",
      "Alfresco.SOLR.Caches.AlfrescoReaderToAclIdsCache_CummulativeInserts", "%{AlfrescoReaderToAclIdsCache_CummulativeInserts}",
      "Alfresco.SOLR.Caches.AlfrescoReaderToAclIdsCache_CummulativeLookups", "%{AlfrescoReaderToAclIdsCache_CummulativeLookups}"
    ]
    }
  }
}
#Alfresco Core Documents
input {
  exec {
    type => 'alfrescoCoreNumDocuments'
    command => "echo get -b 'Alfresco:Name=SolrIndexes,Core=alfresco NumDocuments' ReadOnly | java -jar jmxterm/jmxterm-1.0-alpha-4-uber.jar -l service:jmx:rmi:///jndi/rmi://localhost:50500/alfresco/jmxrmi -p change_asap -u controlRole -v silent -n | tr '\n' ' ' | sed s'/;//'g | awk '{print $3}'"
    interval => 60
    tags => 'solrDocuments'
  }
}

filter {
    if [type] == "alfrescoCoreNumDocuments" {
      grok {
        match => [ "message", "%{NUMBER:alfrescoCoreNumDocuments}" ]
    }
  }
}

output {
  if [type] == "alfrescoCoreNumDocuments" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.SOLR.alfrescoCoreNumDocuments", "%{alfrescoCoreNumDocuments}"
    ]
    }
  }
}

#Archive Core Documents
input {
  exec {
    type => 'archiveCoreNumDocuments'
    command => "echo get -b 'Alfresco:Name=SolrIndexes,Core=archive NumDocuments' ReadOnly | java -jar jmxterm/jmxterm-1.0-alpha-4-uber.jar -l service:jmx:rmi:///jndi/rmi://localhost:50500/alfresco/jmxrmi -p change_asap -u controlRole -v silent -n | tr '\n' ' ' | sed s'/;//'g | awk '{print $3}'"
    interval => 60
    tags => 'solrDocuments'
  }
}

filter {
    if [type] == "archiveCoreNumDocuments" {
      grok {
        match => [ "message", "%{NUMBER:archiveCoreNumDocuments}" ]
    }
  }
}

output {
  if [type] == "archiveCoreNumDocuments" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.SOLR.archiveCoreNumDocuments", "%{archiveCoreNumDocuments}"
    ]
    }
  }
}

#Concurrent Users
input {
  exec {
    type => 'concurrentUsers'
    command => "echo get -b 'Alfresco:Name=RepoServerMgmt *' ReadOnly | java -jar jmxterm/jmxterm-1.0-alpha-4-uber.jar -l service:jmx:rmi:///jndi/rmi://localhost:50500/alfresco/jmxrmi -p change_asap -u controlRole -v silent -n | grep -e TicketCountNonExpired -e UserCountNonExpired | tr '\n' ' ' | sed s'/;//'g | awk '{print $3, $6,$9}'"
    interval => 60
    tags => 'concurrentUsers'
  }
}

filter {
    if [type] == "concurrentUsers" {
      grok {
        match => [ "message", "%{NUMBER:TicketCountNonExpired} %{NUMBER:UserCountNonExpired}" ]
    }
  }
}

output {
  if [type] == "concurrentUsers" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.Users.TicketCountNonExpired", "%{TicketCountNonExpired}",
      "Alfresco.Users.UserCountNonExpired", "%{UserCountNonExpired}"
    ]
    }
  }
}

#DB Pool
input {
  exec {
    type => 'DBPool'
    command => "echo get -b 'Alfresco:Name=ConnectionPool *' ReadOnly | java -jar jmxterm/jmxterm-1.0-alpha-4-uber.jar -l service:jmx:rmi:///jndi/rmi://localhost:50500/alfresco/jmxrmi -p change_asap -u controlRole -v silent -n | grep -e MaxActive -e NumActive | tr '\n' ' ' | sed s'/;//'g | awk '{print $3, $6}'"
    interval => 60
    tags => 'database'
  }
}

filter {
    if [type] == "DBPool" {
      grok {
        match => [ "message", "%{NUMBER:DBPoolMaxActive} %{NUMBER:DBPoolNumActive}" ]
    }
  }
}

output {
  if [type] == "DBPool" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.DB.PoolMaxActive", "%{DBPoolMaxActive}",
      "Alfresco.DB.PoolNumActive", "%{DBPoolNumActive}"
    ]
    }
  }
}

#Share Sessions count
input {
  exec {
    type => 'ShareActiveSessions'
    command => "echo get -b 'Catalina:type=Manager,context=/share,host=localhost activeSessions' ReadOnly | java -jar jmxterm/jmxterm-1.0-alpha-4-uber.jar -l service:jmx:rmi:///jndi/rmi://localhost:50500/alfresco/jmxrmi -p change_asap -u controlRole -v silent -n | tr '\n' ' ' | sed s'/;//'g | awk '{print $3}'"
    interval => 60
    tags => 'ShareActiveSessions'
  }
}

filter {
    if [type] == "ShareActiveSessions" {
      grok {
        match => [ "message", "%{NUMBER:ShareActiveSessions}" ]
    }
  }
}

output {
  if [type] == "ShareActiveSessions" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.Tomcat.ShareActiveSessions", "%{ShareActiveSessions}"
    ]
    }
  }
}

#Tomcat Current Threads Busy
input {
  exec {
    type => 'currentThreadsBusy'
    command => "java -jar ./check_jmx.jar -U service:jmx:rmi:///jndi/rmi://localhost:50500/alfresco/jmxrmi -O Catalina:type=ThreadPool,name=\"http-apr-8080\" -A currentThreadsBusy --username controlRole --password change_asap | awk -F '|' '{print $2}' | sed s'/;//'g | awk -F '=' '{print $2}'"
    interval => 10
    tags => 'currentThreadsBusy'
  }
}

filter {
    if [type] == "currentThreadsBusy" {
      grok {
        match => [ "message", "%{NUMBER:currentThreadsBusy}" ]
    }
  }
}

output {
  if [type] == "currentThreadsBusy" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.Tomcat.currentThreadsBusy", "%{currentThreadsBusy}"
    ]
    }
  }
}

#Tomcat Current Threads Count
input {
  exec {
    type => 'currentThreadCount'
    command => "java -jar ./check_jmx.jar -U service:jmx:rmi:///jndi/rmi://localhost:50500/alfresco/jmxrmi -O Catalina:type=ThreadPool,name=\"http-apr-8080\" -A currentThreadCount --username controlRole --password change_asap | awk -F '|' '{print $2}' | sed s'/;//'g | awk -F '=' '{print $2}'"
    interval => 10
    tags => 'currentThreadCount'
  }
}

filter {
    if [type] == "currentThreadCount" {
      grok {
        match => [ "message", "%{NUMBER:currentThreadCount}" ]
    }
  }
}

output {
  if [type] == "currentThreadCount" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.Tomcat.currentThreadCount", "%{currentThreadCount}"
    ]
    }
  }
}

#Tomcat Max Threads Configured
input {
  exec {
    type => 'maxThreads'
    command => "java -jar ./check_jmx.jar -U service:jmx:rmi:///jndi/rmi://localhost:50500/alfresco/jmxrmi -O Catalina:type=ThreadPool,name=\"http-apr-8080\" -A maxThreads --username controlRole --password change_asap | awk -F '|' '{print $2}' | sed s'/;//'g | awk -F '=' '{print $2}'"
    interval => 10
    tags => 'maxThreads'
  }
}

filter {
    if [type] == "maxThreads" {
      grok {
        match => [ "message", "%{NUMBER:maxThreads}" ]
    }
  }
}

output {
  if [type] == "maxThreads" {
    statsd {
      host => "alfrescoMonitor"
      port => 8125
      gauge => [
      "Alfresco.Tomcat.maxThreads", "%{maxThreads}"
    ]
    }
  }
}

########################################
# Enable stdout for debugging purposes #
########################################

#output {
#  stdout { codec => rubydebug }
#}
